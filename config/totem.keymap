//
//                                                        ▀▀▀▀▀     ▀▀▀▀▀          ▀▀█▀▀
//                                                        ▄▀▀▀▄  ▄  ▄▀▀▀▄  ▄  ▄▀▀▀▄  █  ▄▀▀▀▄
//                                                        █   █  █  █   █  █  █   █  █  █   █
//                                                         ▀▀▀   █   ▀▀▀   █   ▀▀▀   ▀   ▀▀▀
//                                                               █      ▄▄▄█▄▄▄    █   █  
//                                                               ▀      █  █  █     █▄█
//                                                             ▀▀▀▀▀    █  █  █      ▀
//                                                                      ▀  ▀  ▀
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
       

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define BASE 0
#define NAV  1
#define SYM  2
#define ADJ  3
#define TVP1 4
#define TVP2 5
#define SYM1 6
#define EXT  7
#define FNC  8
#define SETTINGS  9

&mt {
  quick-tap-ms = <100>;
  global-quick-tap;
  flavor = "tap-preferred";
  tapping-term-ms = <170>;
};

&sk {
    ignore-modifiers;
};

/ {
    behaviors {
            hm: homerow_mods {
                compatible = "zmk,behavior-hold-tap";
                label = "HOMEROW_MODS";
                bindings = <&kp>, <&kp>;

                #binding-cells = <2>;
                tapping-term-ms = <200>;
                flavor = "tap-preferred";
                require-prior-idle-ms = <125>;
                quick-tap-ms = <200>;
            };

            shifthr: shifthr {
                compatible = "zmk,behavior-hold-tap";
                label = "SHIFTHR";
                bindings = <&kp>, <&kp>;

                #binding-cells = <2>;
                tapping-term-ms = <185>;
                flavor = "tap-preferred";
                quick-tap-ms = <185>;
            };

            weak: weak {
                compatible = "zmk,behavior-hold-tap";
                label = "WEAK";
                bindings = <&kp>, <&kp>;

                #binding-cells = <2>;
                tapping-term-ms = <230>;
                flavor = "tap-preferred";
                require-prior-idle-ms = <125>;
                quick-tap-ms = <230>;
            };

            backspace: backspace {
                compatible = "zmk,behavior-tap-dance";
                label = "BACKSPACE";
                #binding-cells = <0>;
                bindings = <&kp BACKSPACE>, <&kp LC(BACKSPACE)>;
            };
        };
        
     combos {
            compatible = "zmk,combos";
            combo_esc {
                timeout-ms = <50>;
                key-positions = <0 1>;
                bindings = <&kp ESC>;
            };
            combo_lpar {
                timeout-ms = <50>;
                key-positions = <2 3>;
                bindings = <&kp LPAR>;
            };           
            combo_rpar {
                timeout-ms = <50>;
                key-positions = <3 4>;
                bindings = <&kp RPAR>;
            };           
            combo_lbkt {
                timeout-ms = <50>;
                key-positions = <12 13>;
                bindings = <&kp LBKT>;
            };
            combo_rbkt {
                timeout-ms = <50>;
                key-positions = <13 14>;
                bindings = <&kp RBKT>;
            };
            combo_lbrc {
                timeout-ms = <50>;
                key-positions = <22 23>;
                bindings = <&kp LBRC>;
            };
            combo_rbrc {
                timeout-ms = <50>;
                key-positions = <23 24>;
                bindings = <&kp RBRC>;
            };
            combo_bspc {
		        timeout-ms = <50>;
		        key-positions = <8 9>;
		        bindings = <&kp BSPC>;
	        };
        };

    macros {
        save: save {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp ESCAPE &kp COLON &kp W &kp ENTER>;

            label = "SAVE";
        };

        email: email {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp z &kp h &kp a &kp n &kp g &kp z &kp q &kp 7 &kp 1 &kp AT &kp h &kp o &kp t &kp m &kp a &kp i &kp l &kp DOT &kp c &kp o &kp m>;
            label = "EMAIL";
        };

        gif: gif {
            label = "giphy";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LSHFT>
                , <&macro_tap &kp N2>
                , <&macro_release &kp LSHFT>
                , <&macro_tap &kp G &kp I &kp F>
                ;
        };
    };

        keymap {
                compatible = "zmk,keymap";

                base_layer {
                    label= "BASE";
                    bindings = <
&none   &kp Q              &kp W             &kp E                     &kp R                  &kp T        &kp Y        &kp U              &kp I                &kp O               &kp P                &none
&none   &kp A              &kp S             &kp D                     &shifthr LEFT_SHIFT F  &kp G        &kp H        &kp J              &kp K                &kp L               &kp SEMICOLON        &none
&kp DQT &weak LEFT_META Z  &weak LEFT_ALT X  &shifthr LEFT_CONTROL C   &mt LSHFT V            &kp B        &kp N        &shifthr RSHIFT M  &shifthr RCTRL COMMA &weak RIGHT_ALT DOT &kp FSLH             &kp BSLH
                                            &hm LC(BACKSPACE) ESCAPE  &lt 1 TAB              &lt 2 SPACE  &lt 2 ENTER  &lt 1 BACKSPACE    &kp DEL
                        >;
                };

                num_layer {
                    label= "NUM";
                    bindings = <
&none  &kp EXCL            &kp AT               &kp LEFT_BRACE              &kp RIGHT_BRACE                   &kp PIPE     &kp PLUS         &kp NUMBER_7        &kp N8             &kp N9                    &kp ASTERISK   &none
&none  &hm LEFT_META HASH  &kp DOLLAR           &kp LEFT_PARENTHESIS        &kp RIGHT_PARENTHESIS             &kp GRAVE    &kp MINUS        &kp NUMBER_4        &kp NUMBER_5       &kp NUMBER_6              &kp COLON      &none
&trans &kp PERCENT         &hm LEFT_ALT CARET   &hm LCTRL LEFT_BRACKET      &hm LEFT_SHIFT RIGHT_BRACKET      &kp TILDE    &hm RSHFT EQUAL  &hm RCTRL NUMBER_1  &hm RALT NUMBER_2  &shifthr PERIOD NUMBER_3  &kp BACKSLASH  &trans
                                                &none                       &kp LC(BACKSPACE)                 &kp SPACE    &kp RET    &kp N0     &kp DEL
                        >;
                };

                nav_layer {
                    label= "NAV";
                        bindings = <
&none  &kp F1            &kp F2           &kp F3        &kp F4        &kp INS             &kp HOME           &kp LS(H)       &kp PAGE_DOWN  &kp PG_UP     &kp LS(L)        &none  
&none  &kp F5            &kpF6            &kp F7        &kp F8        &hm LC(V) LC(C)     &kp LEFT_ARROW     &kp DOWN        &kp UP_ARROW   &kp RIGHT     &hm LC(V) LC(C)  &none
&trans &kp F9            &hm LALT F10     &hm LCTRL F11 &hm LSHFT F12 &kp PSCRN           &kp END            &kp LA(H)       &kp LA(TAB)    &kp PSCRN     &kp LA(L)        &email
                                           &bt BT_CLR    &bt BT_NXT    &bt BT_PRV          &trans             &trans         &trans
                        >;
                };
        };
};
